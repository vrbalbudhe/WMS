// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String      @id @default(auto()) @map("_id") @db.ObjectId
  email              String      @unique
  name               String
  password           String
  phone              String?     @unique
  avatar             String?
  otp                String?
  employeeId         String?
  warehouse          Warehouse?  @relation(fields: [warehouseId], references: [id])
  warehouseId        String?     @db.ObjectId
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  userType           UserType
  mustChangePassword Boolean     @default(true)
  status             UserStatus  @default(pending)
}
enum UserType {
  procurement_officer
  warehouse_manager
}

enum UserStatus {
  active
  inactive
  pending
}


model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

//for creating warehouse from admin panel

model Warehouse {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  address       String
  city          String
  pincode       String
  googleMapLink String?
  description   String?
  customFields  Json?
  users         User[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Category {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String?
  fields          Json?      // Store dynamic field configurations as JSON
  createdByUserId String?    @db.ObjectId
  updatedByUserId String?    @db.ObjectId
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model WarehouseFieldConfig {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  type        String   // text, number, date, dropdown, etc.
  isRequired  Boolean  @default(false)
  options     String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}